/* ==========================================================================
   SectionDivider ‚Äì Modern Warm Africa
   Leitlinien:
   - Tokens only (Farben/Verl√§ufe √ºber globale CSS‚ÄëVariablen, kein Hardcode)
   - CLS-frei: reservierte Fl√§che via --divider-h (explizite H√∂he)
   - Responsiv: H√∂he skaliert √ºber Breakpoints
   - Rein dekorativ: keine Pointer-Events, aria-hidden im TSX
   ========================================================================== */

.divider {
  /* Default-H√∂he; kann pro Instanz via Prop `height` √ºberschrieben werden */
  --divider-h: 80px;

  /* Semantische Tokens ‚Äì kommen aus variables.css / base.css */
  --surface-light: var(--color-neutral-light, #fff);
  --surface-dark: var(--color-secondary, #0f172a);
  --grad-start: var(--brand-gradient-start, var(--surface-light));
  --grad-end: var(--brand-gradient-end, var(--color-neutral-medium, #f5f5f5));

  position: relative;
  display: block;
  width: 100%;

  /* üõë CLS-Schutz: Fl√§che ist fix reserviert (nicht nur min-height) */
  height: var(--divider-h);
  min-height: var(--divider-h);

  /* Rendering-Sauberkeit: Dekor vom Rest trennen */
  isolation: isolate;
  pointer-events: none; /* Divider ist nicht interaktiv */
  contain: paint;       /* verhindert unn√∂tiges Repaint-Leaking */
}

/* Mobile: etwas kompakter */
@media (max-width: 480px) {
  .divider { --divider-h: 56px; }
}

/* Desktop: mehr Raum f√ºr Wirkung */
@media (min-width: 1025px) {
  .divider { --divider-h: 96px; }
}

/* Optionaler Fallback:
   Wenn KEIN data-theme gesetzt ist und du invertieren willst,
   tauscht diese Klasse die Gradienten-Tokens lokal. */
.invert {
  --grad-start: var(--surface-dark);
  --grad-end: var(--surface-light);
}

/* ============ WAVE ======================================================= */
/* Hintergrund kommt aus dem SVG ‚Üí Wrapper selbst hat keinen Hintergrund */
.variant_wave { background: none; }

.waveSvg {
  /* SVG f√ºllt exakt die reservierte Fl√§che ‚Üí keine Layout-Shifts */
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  display: block;

  /* Glatter Pfad, keine Treppeneffekte */
  shape-rendering: geometricPrecision;
}

/* ============ DIAGONAL =================================================== */
/* Sanfter Verlauf √ºber die gesamte Fl√§che (Tokens definieren die Farben) */
.variant_diagonal {
  background: linear-gradient(180deg, var(--grad-start) 0%, var(--grad-end) 100%);
}

.diagonalShape {
  position: absolute;
  inset: 0;

  /* Schr√§ger, professioneller Schnitt (ca. 8%) */
  clip-path: polygon(0 0, 100% 8%, 100% 100%, 0 100%);

  /* √úbernimmt den Verlauf vom Wrapper */
  background: inherit;
}

/* Fallback: wenn clip-path nicht unterst√ºtzt wird ‚Üí glatter Verlauf */
@supports not (clip-path: polygon(0 0)) {
  .diagonalShape { clip-path: none; }
}

/* ============ STRAIGHT =================================================== */
/* Ruhiger Verlauf als Basisfl√§che */
.variant_straight {
  background: linear-gradient(180deg, var(--grad-start) 0%, var(--grad-end) 100%);
}

/* Feine Linie mit subtiler Tiefe ‚Äì nutzt dedizierte Tokens */
.straightRule {
  position: absolute;
  left: 0;
  right: 0;

  /* Mittig in der reservierten Fl√§che */
  top: calc(var(--divider-h) / 2);
  height: 1px;

  background:
    linear-gradient(
      90deg,
      transparent 0%,
      var(--divider-line, rgba(0,0,0,0.12)) 20%,
      var(--divider-line, rgba(0,0,0,0.12)) 80%,
      transparent 100%
    );

  box-shadow: 0 0.5px 0 0 var(--divider-shadow, rgba(0,0,0,0.08));
}

/* ============ Motion Preferences ======================================== */
/* Respektiert Nutzer, die Bewegungen reduzieren m√∂chten */
@media (prefers-reduced-motion: reduce) {
  [data-aos] {
    transition: none !important;
    animation: none !important;
  }
}
